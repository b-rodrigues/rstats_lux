<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>D3js on Rstats Luxembourg</title>
    <link>/tags/d3js/index.xml</link>
    <description>Recent content in D3js on Rstats Luxembourg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/d3js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>R and d3js, how to make them communicate</title>
      <link>/portfolio/d3jsandR_communication/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/portfolio/d3jsandR_communication/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;In this post we will focus ourself on how to integrate a message from R to javascript. More precisely, we will focus on the basic key words and knowledge to integrate a d3.js graphic into shiny, just like &lt;a href=&#34;http://51.254.215.145:3838/shiny-fret/&#34;&gt;here&lt;/a&gt;. &lt;del&gt;If you have no clue about what shiny is. I suggest you to see some of my apps here and if you want to learn more, check this &lt;a href=&#34;https://shiny.rstudio.com/tutorial/lesson1/&#34;&gt;tutorial&lt;/a&gt;.&lt;/del&gt; &lt;del&gt;To write this post I inspire myself of &lt;a href=&#34;https://myinspirationinformation.com/visualisation/d3-js/integrating-d3-js-into-r-shiny&#34;&gt;James Thomson ’s blog&lt;/a&gt; and a &lt;a href=&#34;http://shiny.rstudio.com/gallery/server-to-client-custom-messages.html&#34;&gt;shiny app&lt;/a&gt; from Rstudio.&lt;/del&gt; If you have any issue to make shiny and javascript communicate after reading this post, I suggest you to go back to this simple &lt;a href=&#34;http://shiny.rstudio.com/gallery/server-to-client-custom-messages.html&#34;&gt;shiny app&lt;/a&gt; from Rstudio.&lt;br&gt;&lt;br&gt; First of all, you will create a folder where you will put your data file (.csv, .txt, etc..) and your app.R (or ui.R and server.R). In this folder, you will create a new folder that you will name “www”. You will put your .css and .js file inside “www”. &lt;br&gt;&lt;br&gt; &lt;img src=&#34;../../Users/user/Desktop/Clef_USB/data_science/hugo/static/img/portfolio/folder_www.png&#34; alt=&#34;&#34; /&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;To make R and d3.js communicate, you will have to put some key words in the server part, the ui part and the .js file.&lt;br&gt;&lt;br&gt; &lt;strong&gt;in server.R&lt;/strong&gt;, put your data that you want to send to javascript in an &lt;strong&gt;observe({ })&lt;/strong&gt; function. Just like bellow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function(input, output, session) {
    observe({
        dataSendToJs = &amp;quot;Hello World&amp;quot;
        session$sendCustomMessage(type = &amp;#39;nameOfTheMessage&amp;#39;,dataSendToJs)
    })
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;session$sendCustomMessage( )&lt;/strong&gt; allows you to send your data from shiny to javascript. &lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;in ui.R&lt;/strong&gt;, source the javascript document via a tag function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fluidPage(
  titlePanel(&amp;quot;Example&amp;quot;),
  fluidRow(
  #Shiny way to integrate html code in the web page
  tags$head(tags$script(src = &amp;quot;message.js&amp;quot;))
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt; &lt;strong&gt;in .js&lt;/strong&gt;, code has to begin with &lt;strong&gt;“Shiny.addCustomMessageHandler(”nameOfTheMessage“, function(message) {”&lt;/strong&gt; like the following example. Don’t forget message represents data from R that javascript will read so it’s better to transform them to json data. You can do it in R via the function &lt;code&gt;jsonlite::toJSON()&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Shiny.addCustomMessageHandler(&amp;quot;nameOfTheMessage&amp;quot;,
                                      function(message) {
                                              alert(JSON.stringify(message));
                                      });&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now it should work! You can find the whole process in this repository. We have begin with something simple but you can do more complex thing with same logic.&lt;/p&gt;
&lt;p&gt;Be carefull, if you’re working locally, you have to make some modification: First, you need to have a webserver. I use &lt;a href=&#34;https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb?hl=en&#34;&gt;web server for chrome&lt;/a&gt;. If you choose to use the same web server, it’s very simple. &lt;br&gt; First, in “CHOOSE FOLDER”, ou have to choose the “www” folder that you have made previously, then a web server url will appear. Click on it, then a new web page with the different files from “www” should pop-up.&lt;br&gt;&lt;br&gt; &lt;img src=&#34;../../Users/user/Desktop/Clef_USB/data_science/hugo/static/img/portfolio/webserver_source.png&#34; style = &#34;max-width:640px;&#34;&gt; &lt;br&gt;&lt;br&gt; In ui.R (or the ui part of your single-file shiny app), source d3.min.js and all “.css” and “.js” files as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#http://127.0.0.1:8887 represents the web server URL
tags$head(tags$script(src = &amp;quot;http://127.0.0.1:8887/d3.min.js&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now it should work :) &lt;br&gt;&lt;br&gt; You can see a complete and reproductable example in &lt;a href=&#34;https://github.com/woozaa/fret_Lux&#34;&gt;GitHub&lt;/a&gt;.&lt;br&gt; Don’t hesitate to contact me if you have any comments or suggestions.&lt;/p&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>